plugins {
	id 'java'
}

group = 'com.dsam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
	invoker
}

repositories {
	jcenter()
	mavenCentral()
	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	// Every function needs this dependency to get the Functions Framework API.
	compileOnly 'com.google.cloud.functions:functions-framework-api:1.0.4'

	// To run function locally using Functions Framework's local invoker
	invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.1.0'

	// google cloud pub/sub client
	implementation platform('com.google.cloud:libraries-bom:24.2.0')
	implementation 'com.google.cloud:google-cloud-pubsub'
	// google-cloud-storage
	implementation 'com.google.cloud:google-cloud-storage'

	// Hikari config dependency
	implementation 'com.zaxxer:HikariCP:5.0.1'

	// lombok
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// postgres
	implementation 'org.postgresql:postgresql:42.3.1'

	// pdfbox
	implementation 'org.apache.pdfbox:pdfbox:2.0.24'
	implementation 'com.github.ralfstuckert.pdfbox-layout:pdfbox2-layout:1.0.1'

	// iText
	implementation 'com.itextpdf:kernel:7.2.1'
	implementation 'com.itextpdf:io:7.2.1'
	implementation 'com.itextpdf:layout:7.2.1'
	implementation 'com.itextpdf:forms:7.2.1'
	implementation 'com.itextpdf:pdfa:7.2.1'
	implementation 'com.itextpdf:sign:7.2.1'
	implementation 'com.itextpdf:barcodes:7.2.1'
	testImplementation 'com.itextpdf:font-asian:7.2.1'
	testImplementation 'com.itextpdf:hyph:7.2.1'

	// simple javamail
	implementation 'org.simplejavamail:simple-java-mail:7.1.0'

	// These dependencies are only used by the tests.
	testImplementation 'com.google.cloud.functions:functions-framework-api:1.0.4'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'com.google.truth:truth:1.1.3'
	testImplementation 'org.mockito:mockito-core:4.3.1'
}

// Register a "runFunction" task to run the function locally
tasks.register("runFunction", JavaExec) {
	main = 'com.google.cloud.functions.invoker.runner.Invoker'
	classpath(configurations.invoker)
	inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
	args(
		'--target', project.findProperty('run.functionTarget') ?: '',
		'--port', project.findProperty('run.port') ?: 8080
	)
	doFirst {
		args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
	}
}